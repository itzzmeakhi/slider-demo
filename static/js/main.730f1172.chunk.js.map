{"version":3,"sources":["images sync /^/.*$","images/four.jpg","images/one.jpg","images/three.jpg","images/two.jpg","components/Slide/Slide.component.jsx","components/Arrow/Arrow.component.jsx","components/Dots/Dots.component.jsx","components/SliderContent/SliderContent.component.jsx","App.js","serviceWorker.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","Slide","props","className","src","require","file","alt","name","Arrow","direction","click","Fragment","type","onClick","Dots","activeItem","active","SliderComponent","handleNext","state","sliderOptions","activeIndex","console","log","length","setState","prevState","handlePrev","this","slideActive","key","slide","index","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.730f1172.chunk.js","sourcesContent":["var map = {\n\t\"./four.jpg\": 17,\n\t\"./one.jpg\": 18,\n\t\"./three.jpg\": 19,\n\t\"./two.jpg\": 20\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 16;","module.exports = __webpack_public_path__ + \"static/media/four.cd606e94.jpg\";","module.exports = __webpack_public_path__ + \"static/media/one.48b666d6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/three.c5bfa118.jpg\";","module.exports = __webpack_public_path__ + \"static/media/two.a7687236.jpg\";","import React from 'react';\r\n\r\nimport './Slide.styles.css';\r\n\r\nconst Slide = (props) => {\r\n    return(\r\n        <div className = 'slide'>\r\n            <img src = {require(`./../../images/${props.file}`)} alt = {props.name} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Slide;","import React from 'react';\r\n\r\nimport './Arrow.styles.css';\r\n\r\nconst Arrow = ({direction, click, ...props}) => {\r\n    return (\r\n        <React.Fragment>\r\n            {direction === 'right' ? (\r\n                <button\r\n                    {...props}\r\n                    type = 'button'\r\n                    onClick = {click}>\r\n                        {`${'>'}`}\r\n                </button>\r\n            ) : (\r\n                <button\r\n                    {...props}\r\n                    type = 'button'\r\n                    onClick = {click}>\r\n                        {`${'<'}`}\r\n                </button>\r\n            )}\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Arrow;","import React from 'react';\r\n\r\nimport './Dots.styles.css';\r\n\r\nconst Dots = ({active}) => {\r\n    let activeItem = null;\r\n    if(active) { \r\n        activeItem = 'active' \r\n    }\r\n    return (\r\n        <div className = {`dots ${activeItem}`}>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dots;","import React, { Component } from 'react';\r\n\r\nimport Slide from './../Slide/Slide.component';\r\nimport Arrow from './../Arrow/Arrow.component';\r\nimport Dots from './../Dots/Dots.component';\r\n\r\nimport './SliderContent.styles.css';\r\n\r\n\r\nclass SliderComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            sliderOptions: [\r\n                { name: 'one', file: 'one.jpg' },\r\n                { name: 'two', file: 'two.jpg' },\r\n                { name: 'three', file: 'three.jpg' },\r\n                { name: 'four', file: 'four.jpg' }\r\n            ],\r\n            activeIndex: 0\r\n        }\r\n    }\r\n\r\n    handleNext = () => {\r\n        const { sliderOptions, activeIndex } = this.state;\r\n        console.log(activeIndex)\r\n        if(activeIndex === sliderOptions.length - 1) {\r\n            return this.setState(prevState => {\r\n                return {\r\n                    ...prevState,\r\n                    activeIndex: 0\r\n                }\r\n            })\r\n        }\r\n        this.setState(prevState => {\r\n            return {\r\n                ...prevState,\r\n                activeIndex: prevState.activeIndex + 1\r\n            }\r\n        })\r\n    }\r\n\r\n    handlePrev = () => {\r\n        const { activeIndex } = this.state;\r\n        console.log(activeIndex)\r\n        if(activeIndex === 0) {\r\n            return;\r\n        }\r\n        this.setState(prevState => {\r\n            return {\r\n                ...prevState,\r\n                activeIndex: prevState.activeIndex - 1\r\n            }\r\n        })\r\n    }\r\n    render() {\r\n        const { activeIndex, sliderOptions } = this.state;\r\n        const slideActive = {...sliderOptions[activeIndex]};\r\n        return(\r\n            <div className = 'slider'>\r\n\r\n                <Slide \r\n                    file = {slideActive.file} \r\n                    name = {slideActive.name} \r\n                    key = {slideActive.name} />\r\n\r\n                <Arrow direction = 'left' className = 'left__arrow' click = {this.handlePrev} />\r\n                <Arrow direction = 'right' className = 'right__arrow' click = {this.handleNext} />\r\n\r\n                <div className = 'slider__dots'>\r\n\r\n                    {sliderOptions.map((slide, index) => \r\n                        <Dots key = {index+slide.name} active = {activeIndex === index ? true : false} />\r\n                    )}\r\n\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SliderComponent;","import React from 'react';\n\nimport SliderContent from './components/SliderContent/SliderContent.component';\n\nimport './App.css';\n\nconst App = () => {\n    return(\n        <div className = 'app'>\n            <SliderContent />\n        </div>\n    )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}